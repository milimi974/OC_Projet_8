# Generated by Django 2.0.3 on 2018-04-03 07:40

from django.db import migrations, models
import django.db.models.manager
import tools


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codebar', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('nutri_code', models.CharField(max_length=1)),
                ('link', models.CharField(max_length=255)),
                ('picture', models.URLField()),
                ('image', models.ImageField(blank=True, height_field='height_field', null=True, upload_to=tools.upload_location, width_field='width_field')),
                ('width_field', models.IntegerField(default=0)),
                ('height_field', models.IntegerField(default=0)),
                ('create_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('categories', models.ManyToManyField(blank=True, related_name='categories', to='product.Category')),
            ],
            managers=[
                ('manage', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='shops',
            field=models.ManyToManyField(blank=True, related_name='shops', to='product.Shop'),
        ),
    ]
